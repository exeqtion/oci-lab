services:
  frontend:
    build:
      context: "./example-frontend/"
      dockerfile: "Containerfile.frontend"
    ports:
      - "5000:5000"
    container_name: "frontend"

  backend:
    build:
      context: "./example-backend/"
      dockerfile: "Containerfile.backend"
    depends_on:
      - cache
      - database
    environment:
      - "PORT=9000"
      - "REQUEST_ORIGIN=http://172.30.30.200:5000"
      - "REDIS_HOST=cache"
      - "POSTGRES_HOST=database"
      - "POSTGRES_USER=testuser"
      - "POSTGRES_PASSWORD=Pa$$w0rd12345"
      - "POSTGRES_DATABASE=postgres_db"
    ports:
      - "9000:9000"
    container_name: "backend"

  cache:
    image: "docker.io/redis:alpine"
    container_name: "cache"

  database:
    image: "docker.io/postgres:alpine"
    container_name: "database"
    restart: "unless-stopped"
    environment:
      - "POSTGRES_USER=testuser"
      - "POSTGRES_PASSWORD=Pa$$w0rd12345"
      - "POSTGRES_DB=postgres_db"
    volumes:
      - type: volume
        source: database
        target: /var/lib/postgresql/data

volumes:
  database:
